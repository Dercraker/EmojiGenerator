// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// This is your Prisma schema file
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  image     String?
  emojis    Emoji[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([email])
}

model EmojiType {
  id          String   @id @default(cuid())
  name        String   @unique
  description String?
  slug        String   @unique
  emojis      Emoji[]
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([name])
  @@index([slug])
}

model Emoji {
  id              String   @id @default(cuid())
  slug            String   @unique
  prompt          String
  originalUrl     String
  noBackgroundUrl String?
  safetyRating    Int      @default(0)
  error           String?
  isPublic        Boolean  @default(true)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  viewCount       Int      @default(0)
  downloadCount   Int      @default(0)
  


  // Relations
  type      EmojiType @relation(fields: [typeId], references: [id])
  typeId    String
  tags      Tag[]
  creator   User      @relation(fields: [creatorId], references: [id])
  creatorId String

  @@index([typeId])
  @@index([creatorId])
  @@index([isPublic, createdAt])
  @@index([safetyRating, createdAt])
  @@index([viewCount])
  @@index([downloadCount])
}

model Tag {
  id        String   @id @default(cuid())
  name      String   @unique
  emojis    Emoji[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([name])
}
